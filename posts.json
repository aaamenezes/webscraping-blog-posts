[
  {
    "title": "Object Stereotypes",
    "description": "The six object stereotypes act as building blocks - stereotypical elements - of any design.",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/73882be0bd66df7b874570e76cd6e75515c25544/d6964/img/blog/object-oriented/design/object-stereotypes/lego-3.png",
    "url": "https://khalilstemmler.com/articles/object-oriented/design/object-stereotypes/",
    "date": null,
    "owner": "Khalil Stemmler"
  },
  {
    "title": "98% of Developers Use React as a Framework, Not a Library",
    "description": "React is a view layer library but most developers use it as a framework. Let's look into why that is and the implications of it.",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/9de01918394406187bab2b4a8d1199399bc44fd8/411a5/img/banner/blog-banner.png",
    "url": "https://khalilstemmler.com/blogs/frontend/using-react-as-a-framework/",
    "date": null,
    "owner": "Khalil Stemmler"
  },
  {
    "title": "Non-Functional Requirements (with Examples)",
    "description": "Non-functional requirements are quality attributes that describe how the system should be. They judge the system as a whole based ...",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/2df28a89e76f4175eb88cf0da0acca511d558a3a/67f51/img/blog/object-oriented/analysis/non-functional-requirements/complexity.png",
    "url": "https://khalilstemmler.com/articles/object-oriented/analysis/non-functional-requirements/",
    "date": null,
    "owner": "Khalil Stemmler"
  },
  {
    "title": "Responsibility-Driven Design",
    "description": "Responsibility-Driven Design is the influential object-oriented design method that presents an effective way to turn requirements ...",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/9213050494d7353ea7c6e4136b41c6af1b97c537/15414/img/blog/object-oriented/programming/object-oriented-programming.png",
    "url": "https://khalilstemmler.com/articles/object-oriented/programming/dependency-composition-delegation-aggregation/",
    "date": null,
    "owner": "Khalil Stemmler"
  },
  {
    "title": "What are Dependencies, Composition, Delegation, and Aggregation in Object-Oriented Programming?",
    "description": "The four principles of object-oriented programming (abstraction, inheritance, encapsulation, and polymorphism) are features that -...",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/26ab539a1c09113061ecc5a9fb3f300efcbfd597/4b7c1/img/blog/object-oriented/programming/header-2.png",
    "url": "https://khalilstemmler.com/articles/object-oriented/programming/4-principles/",
    "date": null,
    "owner": "Khalil Stemmler"
  },
  {
    "title": "4 Principles of Object-Oriented Programming",
    "description": "The four principles of object-oriented programming (abstraction, inheritance, encapsulation, and polymorphism) are features that -...",
    "thumbnail": "https://d33wubrfki0l68.cloudfront.net/26ab539a1c09113061ecc5a9fb3f300efcbfd597/4b7c1/img/blog/object-oriented/programming/header-2.png",
    "url": "https://khalilstemmler.com/articles/object-oriented/design/responsibility-driven-design/",
    "date": null,
    "owner": "Khalil Stemmler"
  }
]